{
  "name": "dap-extension",
  "displayName": "dap-extension",
  "description": "Debug with VSCode",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.77.0"
  },
  "categories": [
    "Debuggers"
  ],
  "activationEvents": [ "onDebug", "onDebugResolve:dap-extension", "onDebug:closures" ],
  "main": "./out/extension.js",
  "contributes": {
    "views": {
      "debug": [
        { "id": "closures"
        , "name": "closures"
        , "visibility": "visible"
        , "initialSize": 30
        , "contextualTitle": "Closures for ${workspaceFolder}"
        , "type": "tree"
        }
      ]
    },
    "debuggers": [
      {
        "type": "dap-extension",
        "languages": [
          "Haskell"
        ],
        "program": "${workspaceFolder}/test.fullpak",
        "label": "dap-extension",
        "configurationAttributes": {
          "attach": {
            "required": ["program"],
            "properties": {
              "program": {
                "type": "string",
                "description": "Absolute path to the program",
                "default": "${workspaceFolder}/test.fullpak"
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "name": "my project",
            "type": "dap-extension",
            "request": "attach",
            "program": "${workspaceFolder}/test.fullpak"
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.77.0",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^5.56.0",
    "@typescript-eslint/parser": "^5.56.0",
    "eslint": "^8.36.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^4.9.5",
    "@vscode/test-electron": "^2.3.0"
  }
}
